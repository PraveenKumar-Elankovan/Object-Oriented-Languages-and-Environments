<?xml version="1.0"?>

<st-source>
<time-stamp>From VisualWorksÂ® Personal Use Edition, 7.10 of July 10, 2013 on March 20, 2014 at 6:25:48 PM</time-stamp>


<component-created>
<name>CS474 EROS</name> <type>package</type>
</component-created><!-- Package CS474 EROS* -->


<component-created>
<name>CS474 EROS</name> <type>package</type>
</component-created>

<class>
<name>Food</name>
<environment>Smalltalk</environment>
<super>Core.Object</super>
<private>false</private>
<indexed-type>none</indexed-type>
<inst-vars>listName categoryList items1 items2 items3 items4 items5 calories1 calories2 calories3 calories4 calories5 price1 price2 price3 price4 price5 ingredients1 ingredients2 ingredients3 ingredients4 ingredients5 foodName price calories ingredients sideDish1 description1 sidedish descriptionn descriptionIns i suggestionn saveCollection retrieveCollection </inst-vars>
<class-inst-vars></class-inst-vars>
<imports></imports>
<category></category>
<attributes>
<package>CS474 EROS</package>
</attributes>
</class>

<class>
<name>EROS</name>
<environment>Smalltalk</environment>
<super>UI.ApplicationModel</super>
<private>false</private>
<indexed-type>none</indexed-type>
<inst-vars>listNames flag myList foodCategory foodItemList foodName ingredients calories price listname foodCategoryChoice sideDish description suggestion </inst-vars>
<class-inst-vars></class-inst-vars>
<imports></imports>
<category></category>
<attributes>
<package>CS474 EROS</package>
</attributes>
</class>

<methods>
<class-id>Food class</class-id> <category>instance creation</category>

<body package="CS474 EROS" selector="new">new	"Answer a newly created and initialized instance."	^super new initialize</body>
</methods>


<methods>
<class-id>Food</class-id> <category>aspects</category>

<body package="CS474 EROS" selector="makenil">makenilfoodName:=nil.price:=nil.calories:=nil.ingredients:=nil.sidedish:=nil.descriptionIns:=nil.suggestionn:=nil.^self.</body>

<body package="CS474 EROS" selector="savelist:">savelist:filename		| outStream outBOS |	self saveObject.	outStream := (Filename named: filename) writeStream.	outBOS := BinaryObjectStorage onNew: outStream.	outBOS nextPut: saveCollection.	outBOS close.	Dialog warn: 'File Export Successful !'.	^self.</body>

<body package="CS474 EROS" selector="new">new^super new initialize.</body>

<body package="CS474 EROS" selector="suggestLightMeal:with:">suggestLightMeal:calory with:pricee|space caloriesMinCollection priceMinCollection caloriesMinCollection1 priceMinCollection1 blockSum sum1 sum2 |blockSum:=0.caloriesMinCollection:=OrderedCollection new.priceMinCollection:=OrderedCollection new.space:=String with:Character space.	((items1 size&gt;0) &amp; (items3 size&gt;0) &amp; (items4 size&gt;0))ifTrue:[|rand1 rand2 rand3 flag1 flag2 sum priceSum min aBlock aBlock1|sum:=0.flag1:=flag2:=0.priceSum:=0.aBlock:=[:x|(x&lt;min)ifTrue:[min:=x].].min:=calories1 first.calories1 do:aBlock.caloriesMinCollection add:min.priceMinCollection add:(price1 at:(calories1 find:min)).sum:=sum+min.min:=calories3 first.calories3 do:aBlock.caloriesMinCollection add:min.priceMinCollection add:(price3 at:(calories3 find:min)).sum:=sum+min.min:=calories4 first.calories4 do:aBlock.caloriesMinCollection add:min.priceMinCollection add:(price4 at:(calories4 find:min)).sum:=sum+min.aBlock1:=[:x|blockSum:=blockSum+x].caloriesMinCollection do:aBlock1.sum1:=blockSum.blockSum:=0.priceMinCollection do:aBlock1.sum2:=blockSum.((sum1&lt;=calory) &amp; (sum2&lt;=pricee))ifTrue:[suggestionn:='Appetizer: ',(items1 at:(calories1 find:(caloriesMinCollection at:1))) printString,space,space,space,space,'Dessert: ',(items3 at:(calories3 find:(caloriesMinCollection at:2))) printString,space,space,space,space,'Soda: ',(items4 at:(calories4 find:(caloriesMinCollection at:3)))printString.^self.].caloriesMinCollection1:=OrderedCollection new.priceMinCollection1:=OrderedCollection new.min:=price1 first.price1 do:aBlock.priceMinCollection1 add:min.caloriesMinCollection1 add:(calories1 at:(price1 find:min)).priceSum:=priceSum+min.min:=price3 first.price3 do:aBlock.priceMinCollection1 add:min.caloriesMinCollection1 add:(calories3 at:(price3 find:min)).priceSum:=priceSum+min.min:=price4 first.price4 do:aBlock.priceMinCollection1 add:min.caloriesMinCollection1 add:(calories4 at:(price4 find:min)).priceSum:=priceSum+min.blockSum:=0.caloriesMinCollection1 do:aBlock1.sum1:=blockSum.blockSum:=0.priceMinCollection1 do:aBlock1.sum2:=blockSum.((sum1&lt;=calory) &amp; (sum2&lt;=pricee))ifTrue:[suggestionn:='Appetizer: ',(items1 at:(calories1 find:(caloriesMinCollection at:1))) printString,space,space,space,space,'Dessert: ',(items3 at:(calories1 find:(caloriesMinCollection at:2))) printString,space,space,space,space,'Soda: ',(items4 at:(calories1 find:(caloriesMinCollection at:3)))printString.^self.].((calory&gt;=sum) &amp; (pricee&gt;=priceSum))ifTrue:[[(flag1=0) &amp; (flag2&lt;10)] whileTrue:[flag2:=flag2+1.rand1:=((((FastRandom new nextValue) *1000) asInteger) rem: (calories1 size)) +1.rand2:=((((FastRandom new nextValue) *1000) asInteger) rem: (calories3 size)) +1.rand3:=((((FastRandom new nextValue) *1000) asInteger) rem: (calories4 size)) +1.sum:=priceSum:=0.sum:=(calories1 at:rand1) + (calories3 at:rand2) + (calories4 at:rand3).priceSum:=(price1 at:rand1) + (price3 at:rand2) + (price4 at:rand3).((sum&lt;=calory) &amp; (priceSum&lt;=pricee ))ifTrue:[flag1:=1.		suggestionn:='Appetizer: ',(items1 at:rand1) printString,space,space,space,space,'Dessert: ',(items3 at:rand2) printString,space,space,space,space,'Soda: ',(items4 at:rand3)printString.^self.].		].]ifFalse:[suggestionn:='There is no meal available with the given calory and size'.^self.].suggestionn:='There is no meal available with the given calory and size'.^self.]ifFalse:[Dialog warn:'For a Full Meal, Minimum one entry has to be present under 1.Appetizer',space,space,space,'2.Desserts',space,space,space,'3.Soda'.].^self.</body>

<body package="CS474 EROS" selector="displayAll:with:">displayAll:itemName with:foodCategory| index |	(itemName isNil)ifFalse:[(foodCategory=(categoryList at:1))ifTrue:[index:=items1 find:itemName.foodName:= items1 at:index.price:=price1 at:index.calories:=calories1 at:index.ingredients:=ingredients1 at:index.].(foodCategory=(categoryList at:2))ifTrue:[index:=items2 find:itemName.foodName:= items2 at:index.price:=price2 at:index.calories:=calories2 at:index.ingredients:=ingredients2 at:index.sidedish:=sideDish1 at:index.].(foodCategory=(categoryList at:3))ifTrue:[index:=items3 find:itemName.foodName:= items3 at:index.price:=price3 at:index.calories:=calories3 at:index.descriptionIns:=description1 at:index.].(foodCategory=(categoryList at:4))ifTrue:[index:=items4 find:itemName.foodName:= items4 at:index.price:=price4 at:index.calories:=calories4 at:index.].(foodCategory=(categoryList at:5))ifTrue:[index:=items5 find:itemName.foodName:= items5 at:index.price:=price5 at:index.calories:=calories5 at:index.ingredients:=ingredients5 at:index.].].^self.</body>

<body package="CS474 EROS" selector="saveObject">saveObjectsaveCollection add:items1.saveCollection add:items2.saveCollection add:items3.saveCollection add:items4.saveCollection add:items5.saveCollection add:price1.saveCollection add:price2.saveCollection add:price3.saveCollection add:price4.saveCollection add:price5.saveCollection add:calories1.saveCollection add:calories2.saveCollection add:calories3.saveCollection add:calories4.saveCollection add:calories5.saveCollection add:ingredients1.saveCollection add:ingredients2.saveCollection add:ingredients5.saveCollection add:sideDish1.saveCollection add:description1.^self.</body>

<body package="CS474 EROS" selector="removeItem:with:">removeItem:itemName with:category| index |	(category=(categoryList at:1))	ifTrue:[index:=items1 find:itemName.			items1 removeAtIndex:index.		    calories1 removeAtIndex:index.			price1 removeAtIndex:index.			ingredients1 removeAtIndex:index].	(category=(categoryList at:2))	ifTrue:[index:=items2 find:itemName.			items2 removeAtIndex:index.		    calories2 removeAtIndex:index.			price2 removeAtIndex:index.			ingredients2 removeAtIndex:index.			sideDish1 removeAtIndex:index.].	(category=(categoryList at:3))	ifTrue:[index:=items3 find:itemName.			items3 removeAtIndex:index.		    calories3 removeAtIndex:index.			price3 removeAtIndex:index.			description1 removeAtIndex:index.].	(category=(categoryList at:4))	ifTrue:[index:=items4 find:itemName.			items4 removeAtIndex:index.		    calories4 removeAtIndex:index.			price4 removeAtIndex:index.			].	(category=(categoryList at:5))	ifTrue:[index:=items5 find:itemName.			items5 removeAtIndex:index.		    calories5 removeAtIndex:index.			price5 removeAtIndex:index.			ingredients5 removeAtIndex:index].^self</body>

<body package="CS474 EROS" selector="retrieveObject">retrieveObject((retrieveCollection at:1) isNil) ifFalse:[items1:=retrieveCollection at:1.].((retrieveCollection at:2) isNil) ifFalse:[items2:=retrieveCollection at:2.].((retrieveCollection at:3) isNil) ifFalse:[items3:=retrieveCollection at:3.].((retrieveCollection at:4) isNil) ifFalse:[items4:=retrieveCollection at:4.].((retrieveCollection at:5) isNil) ifFalse:[items5:=retrieveCollection at:5.].((retrieveCollection at:6) isNil) ifFalse:[price1:=retrieveCollection at:6.].((retrieveCollection at:7) isNil) ifFalse:[price2:=retrieveCollection at:7.].((retrieveCollection at:8) isNil) ifFalse:[price3:=retrieveCollection at:8.].((retrieveCollection at:9) isNil) ifFalse:[price4:=retrieveCollection at:9.].((retrieveCollection at:10) isNil) ifFalse:[price5:=retrieveCollection at:10.].((retrieveCollection at:11) isNil) ifFalse:[calories1:=retrieveCollection at:11.].((retrieveCollection at:12) isNil) ifFalse:[calories2:=retrieveCollection at:12.].((retrieveCollection at:13) isNil) ifFalse:[calories3:=retrieveCollection at:13.].((retrieveCollection at:14) isNil) ifFalse:[calories4:=retrieveCollection at:14.].((retrieveCollection at:15) isNil) ifFalse:[calories5:=retrieveCollection at:15.].((retrieveCollection at:16) isNil) ifFalse:[ingredients1:=retrieveCollection at:16.].((retrieveCollection at:17) isNil) ifFalse:[ingredients2:=retrieveCollection at:17.].((retrieveCollection at:18) isNil) ifFalse:[ingredients5:=retrieveCollection at:18.].((retrieveCollection at:19) isNil) ifFalse:[sideDish1:=retrieveCollection at:19.].((retrieveCollection at:20) isNil) ifFalse:[description1:=retrieveCollection at:20.].^self</body>

<body package="CS474 EROS" selector="suggestFullMeal:with:">suggestFullMeal:calory with:pricee| flag3 space caloriesMinCollection priceMinCollection caloriesMinCollection1 priceMinCollection1 blockSum sum1 sum2 aBlock2 |blockSum:=0.flag3:=0.caloriesMinCollection:=OrderedCollection new.priceMinCollection:=OrderedCollection new.caloriesMinCollection1:=OrderedCollection new.priceMinCollection1:=OrderedCollection new.space := String with: Character space.	((items2 size&gt;0) &amp; ((items1 size&gt;0) | (items3 size&gt;0)) &amp; (items4 size&gt;0) &amp; (items5 size&gt;0))ifTrue:[|min1 aBlock1 rand1 rand2 rand3 rand4 rand5 flag1 flag2 sum priceSum min aBlock |sum:=0.flag1:=flag2:=0.priceSum:=0.aBlock:=[:x|(x&lt;min)ifTrue:[min:=x].].aBlock1:=[:x|(x&lt;min)ifTrue:[min1:=x].].aBlock2:=[:x|blockSum:=blockSum+x].min:=calories2 first.calories2 do:aBlock.caloriesMinCollection add:min.priceMinCollection add:(price2 at:(calories2 find:min)).sum:=sum+min.min:=calories5 first.calories5 do:aBlock.caloriesMinCollection add:min.priceMinCollection add:(price5 at:(calories5 find:min)).sum:=sum+min.min:=calories4 first.calories4 do:aBlock.caloriesMinCollection add:min.priceMinCollection add:(price4 at:(calories4 find:min)).sum:=sum+min.min:=calories1 first.calories1 do:aBlock.min1:=calories3 first.calories3 do:aBlock1.(min&lt;min1)ifTrue:[caloriesMinCollection add:min.priceMinCollection add:(price1 at:(calories1 find:min)).sum:=sum+min.]ifFalse:[flag3:=1.caloriesMinCollection add:min1.priceMinCollection add:(price3 at:(calories3 find:min1)).sum:=sum+min1.].blockSum:=0.caloriesMinCollection do:aBlock2.sum1:=blockSum.blockSum:=0.priceMinCollection do:aBlock2.sum2:=blockSum.((sum1&lt;=calory) &amp; (sum2&lt;=pricee))ifTrue:[(flag3=0)ifTrue:[suggestionn:='Appetizer: ',(items1 at:(calories1 find:(caloriesMinCollection at:4))) printString,space,space,space,space,'MainDish ',(items2 at:(calories2 find:(caloriesMinCollection at:1))) printString,space,space,space,space,'Soda: ',(items4 at:(calories4 find:(caloriesMinCollection at:3)))printString,space,space,space,space,'Long Drink: ',(items5 at:(calories5 find:(caloriesMinCollection at:2)))printString.]ifFalse:[suggestionn:='MainDish ',(items2 at:(calories2 find:(caloriesMinCollection at:1))) printString,space,space,space,space,'Dessert: ',(items3 at:(calories3 find:(caloriesMinCollection at:4))) printString,space,space,space,space,'Soda: ',(items4 at:(calories4 find:(caloriesMinCollection at:3)))printString,space,space,space,space,'Long Drink: ',(items5 at:(calories5 find:(caloriesMinCollection at:2)))printString.].^self.].flag3:=0.min:=price2 first.price2 do:aBlock.priceMinCollection1 add:min.caloriesMinCollection1 add:(calories2 at:(price2 find:min)).priceSum:=priceSum+min.min:=price5 first.price5 do:aBlock.priceMinCollection1 add:min.caloriesMinCollection1 add:(calories5 at:(price5 find:min)).priceSum:=priceSum+min.min:=price4 first.price4 do:aBlock.priceMinCollection1 add:min.caloriesMinCollection1 add:(calories4 at:(price4 find:min)).priceSum:=priceSum+min.min:=price1 first.price1 do:aBlock.min1:=price3 first.price3 do:aBlock1.(min&lt;min1)ifTrue:[priceMinCollection1 add:min.caloriesMinCollection1 add:(calories1 at:(price1 find:min)).priceSum:=priceSum+min.]ifFalse:[flag3:=0.priceMinCollection1 add:min1.caloriesMinCollection1 add:(calories3 at:(price3 find:min1)).priceSum:=priceSum+min1.].blockSum:=0.caloriesMinCollection1 do:aBlock2.sum1:=blockSum.blockSum:=0.priceMinCollection1 do:aBlock2.sum2:=blockSum.((sum1&lt;=calory) &amp; (sum2&lt;=pricee))ifTrue:[(flag3=0)ifTrue:[suggestionn:='Appetizer: ',(items1 at:(calories1 find:(caloriesMinCollection at:4))) printString,space,space,space,space,'MainDish ',(items2 at:(calories2 find:(caloriesMinCollection at:1))) printString,space,space,space,space,'Soda: ',(items4 at:(calories4 find:(caloriesMinCollection at:3)))printString,space,space,space,space,'Long Drink: ',(items5 at:(calories5 find:(caloriesMinCollection at:2)))printString.]ifFalse:[suggestionn:='MainDish ',(items2 at:(calories2 find:(caloriesMinCollection at:1))) printString,space,space,space,space,'Dessert: ',(items3 at:(calories3 find:(caloriesMinCollection at:4))) printString,space,space,space,space,'Soda: ',(items4 at:(calories4 find:(caloriesMinCollection at:3)))printString,space,space,space,space,'Long Drink: ',(items5 at:(calories5 find:(caloriesMinCollection at:2)))printString.].^self.].((calory&gt;=sum) &amp; (pricee&gt;=priceSum))ifTrue:[[(flag1=0) &amp; (flag2&lt;10)] whileTrue:[flag2:=flag2+1.rand1:=((((FastRandom new nextValue) *1000) asInteger) rem: (calories2 size)) +1.rand2:=((((FastRandom new nextValue) *1000) asInteger) rem: (calories4 size)) +1.rand3:=((((FastRandom new nextValue) *1000) asInteger) rem: (calories5 size)) +1.rand4:=((((FastRandom new nextValue) *1000) asInteger) rem: (calories1 size)) +1.rand5:=((((FastRandom new nextValue) *1000) asInteger) rem: (calories3 size)) +1.sum:=priceSum:=0.sum:=(calories2 at:rand1) + (calories4 at:rand2) + (calories5 at:rand3)+ (calories1 at:rand4).priceSum:=(price2 at:rand1) + (price4 at:rand2) + (price5 at:rand3) + (price1 at:rand4).((sum&lt;=calory) &amp; (priceSum&lt;=pricee ))ifTrue:[flag1:=1.		suggestionn:='Appetizer: ',(items1 at:rand4) printString,space,space,space,space,'MainDish ',(items2 at:rand1) printString,space,space,space,space,'Soda: ',(items4 at:rand2)printString,space,space,space,space,'Long Drink: ',(items5 at:rand3)printString.].sum:=priceSum:=0.sum:=(calories2 at:rand1) + (calories4 at:rand2) + (calories5 at:rand3)+ (calories3 at:rand5).priceSum:=(price2 at:rand1) + (price4 at:rand2) + (price5 at:rand3) + (price3 at:rand5).((sum&lt;=calory) &amp; (priceSum&lt;=pricee ))ifTrue:[flag1:=1.		suggestionn:='MainDish ',(items2 at:rand1) printString,space,space,space,space,'Dessert: ',(items3 at:rand5) printString,space,space,space,space,'Soda: ',(items4 at:rand2)printString,space,space,space,space,'Long Drink: ',(items5 at:rand3)printString.^self.].].]ifFalse:[suggestionn:='There is no meal available with the given calory and size'.^self.].suggestionn:='There is no meal available with the given calory and size'.^self.]ifFalse:[Dialog warn:'For a Full Meal, Minimum one entry has to be present under 1.Appetizer/Dessert',space,space,space,'2.Main Dishes',space,space,space,'4.Soda',space,space,space,'5.LongDrink'.].^self.</body>

<body package="CS474 EROS" selector="checkItemName:with:">checkItemName:itemName with:foodCategory(foodCategory=(categoryList at:1))ifTrue:[((items1 find:itemName) isNil)	ifTrue:[^true].].(foodCategory=(categoryList at:2))ifTrue:[((items2 find:itemName) isNil)	ifTrue:[^true].].(foodCategory=(categoryList at:3))ifTrue:[((items3 find:itemName) isNil)	ifTrue:[^true].].(foodCategory=(categoryList at:4))ifTrue:[((items4 find:itemName) isNil)	ifTrue:[^true].].(foodCategory=(categoryList at:5))ifTrue:[((items5 find:itemName) isNil)	ifTrue:[^true].].^false.</body>

<body package="CS474 EROS" selector="setItem:with:with:with:with:with:with:">setItem:itemName with:category with:price with:calory with:ingredientsList with:sideDish with:descriptioni:=0.(category=(categoryList at:1))	ifTrue:[(itemName='') ifTrue:[Dialog warn:'Enter the Name of the List Item'.i:=1.^self].		    	(price='') ifTrue:[Dialog warn:'Enter the price of the List Item'.i:=1.^self].			(calory='') ifTrue:[Dialog warn:'Enter the Calories of the List Item'.i:=1.^self].			(ingredientsList size=0)ifTrue:[Dialog warn:'Enter the Ingredients of the List Item'.i:=1.^self].			items1 add:itemName.		    calories1 add:calory.			price1 add:price.			ingredients1 add:ingredientsList].(category=(categoryList at:2))	ifTrue:[(itemName='') ifTrue:[Dialog warn:'Enter the Name of the List Item'.i:=1.^self].		    	(price='') ifTrue:[Dialog warn:'Enter the price of the List Item'.i:=1.^self].			(calory='') ifTrue:[Dialog warn:'Enter the Calories of the List Item'.i:=1.^self].			(sideDish='') ifTrue:[Dialog warn:'Enter the sideDish of the List Item'.i:=1.^self].			(ingredientsList size=0)ifTrue:[Dialog warn:'Enter the Ingredients of the List Item'.i:=1.^self].		    items2 add:itemName.		    calories2 add:calory.			price2 add:price.			ingredients2 add:ingredientsList.			sideDish1 add:sideDish.].(category=(categoryList at:3))	ifTrue:[(itemName='') ifTrue:[Dialog warn:'Enter the Name of the List Item'.i:=1.^self].		   (description='')	 ifTrue:[Dialog warn:'Enter the Description for the List Item'.i:=1.^self].		   (price='') ifTrue:[Dialog warn:'Enter the price of the List Item'.i:=1.^self].			(calory='') ifTrue:[Dialog warn:'Enter the Calories of the List Item'.i:=1.^self].		    items3 add:itemName.		    calories3 add:calory.			price3 add:price.			description1 add:description.].(category=(categoryList at:4))		ifTrue:[(itemName='') ifTrue:[Dialog warn:'Enter the Name of the List Item'.i:=1.^self].		    	(price='') ifTrue:[Dialog warn:'Enter the price of the List Item'.i:=1.^self].			(calory='') ifTrue:[Dialog warn:'Enter the Calories of the List Item'.i:=1.^self].		    items4 add:itemName.		    calories4 add:calory.			price4 add:price.].(category=(categoryList at:5))		ifTrue:[(itemName='') ifTrue:[Dialog warn:'Enter the Name of the List Item'.i:=1.^self].		    	(price='') ifTrue:[Dialog warn:'Enter the price of the List Item'.i:=1.^self].			(calory='') ifTrue:[Dialog warn:'Enter the Calories of the List Item'.i:=1.^self].			(ingredientsList size=0)ifTrue:[Dialog warn:'Enter the Ingredients of the List Item'.i:=1.^self].		    items5 add:itemName.		    calories5 add:calory.			price5 add:price.			ingredients5 add:ingredientsList].^self.</body>

<body package="CS474 EROS" selector="displayItemList:">displayItemList:foodCategory(foodCategory=(categoryList at:1))ifTrue:[^items1 asList].(foodCategory=(categoryList at:2))ifTrue:[^items2 asList].(foodCategory=(categoryList at:3))ifTrue:[^items3 asList].(foodCategory=(categoryList at:4))ifTrue:[^items4 asList].(foodCategory=(categoryList at:5))ifTrue:[^items5 asList].</body>

<body package="CS474 EROS" selector="retrievelist:">retrievelist: fileName	| inStream inBOS |	inStream := (Filename named: fileName) readStream.	inBOS := BinaryObjectStorage onOld: inStream.	retrieveCollection := inBOS next.	inBOS close.	i:=0.	self retrieveObject.	^self</body>
</methods>

<methods>
<class-id>Food</class-id> <category>accessing</category>

<body package="CS474 EROS" selector="price">price^price.</body>

<body package="CS474 EROS" selector="sidedish">sidedish^sidedish</body>

<body package="CS474 EROS" selector="suggestionn">suggestionn	^suggestionn</body>

<body package="CS474 EROS" selector="i">i	^i</body>

<body package="CS474 EROS" selector="ingredients">ingredients^ingredients.</body>

<body package="CS474 EROS" selector="descriptionn">descriptionn^description</body>

<body package="CS474 EROS" selector="calories">calories^calories.</body>

<body package="CS474 EROS" selector="descriptionIns">descriptionIns^descriptionIns</body>

<body package="CS474 EROS" selector="listName:">listName:valuelistName=value.^nil.</body>

<body package="CS474 EROS" selector="listName">listName^listName.</body>

<body package="CS474 EROS" selector="foodName">foodName^foodName.</body>
</methods>

<methods>
<class-id>Food</class-id> <category>initialize-release</category>

<body package="CS474 EROS" selector="initialize">initialize	"Initialize a newly created instance. This method must answer the receiver."	i:=0.	super initialize.	saveCollection:=OrderedCollection new.	retrieveCollection:=OrderedCollection new.	items1:=OrderedCollection new.	items2:=OrderedCollection new.	items3:=OrderedCollection new.	items4:=OrderedCollection new.	items5:=OrderedCollection new.	calories1:=OrderedCollection new.	calories2:=OrderedCollection new.	calories3:=OrderedCollection new.	calories4:=OrderedCollection new.	calories5:=OrderedCollection new.	price1:=OrderedCollection new.	price2:=OrderedCollection new.	price3:=OrderedCollection new.	price4:=OrderedCollection new.	price5:=OrderedCollection new.	ingredients1:=OrderedCollection new.	ingredients2:=OrderedCollection new.	ingredients5:=OrderedCollection new.	sideDish1:=OrderedCollection new.	description1:=OrderedCollection new.	categoryList:=OrderedCollection new.	categoryList add:'Appetizers'.	categoryList add:'MainDishes'.	categoryList add:'Desserts'.	categoryList add:'SodaSelection'.	categoryList add:'LongDrink'.	ingredients:=OrderedCollection new.	^self</body>
</methods>


<methods>
<class-id>EROS class</class-id> <category>interface specs</category>

<body package="CS474 EROS" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#properties: #(#{UI.PropertyListDictionary} #sizeType #specifiedSize #positionType #cascade #openType #advanced ) 			#label: 'EROS' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 700 700 ) 			#bounds: #(#{Graphics.Rectangle} 440 125 1140 575 ) 			#flags: 8 			#colors: 			#(#{UI.LookPreferences} 				#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.Rectangle} 16 132 165 440 ) 					#name: #foodItemList 					#model: #foodItemList 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 171 102 ) 					#name: #Ingredients 					#label: 'Ingredients' ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 173 134 386 227 ) 					#name: #ingredients 					#model: #ingredients ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 175 65 275 88 ) 					#name: #foodName 					#model: #foodName ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 173 40 ) 					#name: #'Item Name' 					#label: 'Item Name' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 19 40 ) 					#name: #'Food Category' 					#label: 'Food Category' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 17 103 ) 					#name: #'Food List' 					#label: 'Food List' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 315 38 ) 					#name: #Calories 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 427 39 ) 					#name: #Price 					#label: 'Price' ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 669 11 688 438 ) 					#name: #X 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 6889 2332 2332 ) ) 					#model: #quit 					#label: 'X' 					#defaultable: true ) 				#(#{UI.ComboBoxSpec} 					#layout: #(#{Graphics.Rectangle} 18 65 118 88 ) 					#name: #foodCategory 					#model: #foodCategory 					#isReadOnly: false 					#type: #string 					#comboList: #foodCategoryChoice ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 421 263 528 292 ) 					#name: #Add_List_Entry 					#model: #addItem 					#label: 'Add_List_Entry' 					#defaultable: true ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 315 65 415 88 ) 					#name: #calories 					#model: #calories 					#type: #number 					#formatString: '0' ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 427 65 527 88 ) 					#name: #price 					#model: #price 					#type: #number ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 542 263 651 293 ) 					#name: #Remove_List_Entry 					#model: #removeItem 					#label: 'Remove_List_Entry' 					#defaultable: true ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 541 66 641 89 ) 					#name: #sideDish 					#flags: 40 					#model: #sideDish ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 407 135 652 227 ) 					#name: #description 					#flags: 40 					#model: #description ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 407 105 ) 					#name: #Description 					#label: 'Description' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 541 40 ) 					#name: #'Side Dish' 					#label: 'Side Dish' ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 301 305 416 336 ) 					#name: #Suggest_Light_Meal 					#model: #suggestLightMeal 					#label: 'Suggest_Light_Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 183 305 292 336 ) 					#name: #Suggest_Full_Meal 					#model: #suggestFullMeal 					#label: 'Suggest_Full_Meal' 					#defaultable: true ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 179 372 658 437 ) 					#name: #suggestion 					#model: #suggestion 					#isReadOnly: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 143 239 655 349 ) 					#name: #GroupBox1 ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 183 263 298 291 ) 					#name: #CreateList 					#model: #createList 					#label: 'Create_List' 					#defaultable: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 291 11 ) 					#name: #'R ''us'' Restaurnet Chain' 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} 4096 8191 6143 ) ) 					#label: 'R ''us'' Restaurnet Chain' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 176 349 ) 					#name: 					#'Your Suggested Meal:' 					#label: 'Your Suggested Meal:' ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 423 305 529 335 ) 					#name: #Save_List 					#model: #saveList 					#label: 'Save_List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 541 306 650 335 ) 					#name: #Retrieve_List 					#model: #retrieveList 					#label: 'Retrieve_List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 306 264 414 292 ) 					#name: #'Clear Entries' 					#model: #Clear_Entries 					#label: 'Clear Entries' 					#defaultable: true ) ) ) )</body>
</methods>


<methods>
<class-id>EROS</class-id> <category>aspects</category>

<body package="CS474 EROS" selector="disableAspectsDesserts">disableAspectsDesserts(self builder componentAt:#sideDish) disable.(self builder componentAt:#ingredients) disable.(self builder componentAt:#description) enable.^self</body>

<body package="CS474 EROS" selector="foodName">foodName	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^foodName isNil		ifTrue:			[foodName := String new asValue]		ifFalse:			[foodName]</body>

<body package="CS474 EROS" selector="foodCategory">foodCategory	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^foodCategory isNil		ifTrue:			[foodCategory := String new asValue]		ifFalse:			[foodCategory]</body>

<body package="CS474 EROS" selector="description">description	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^description isNil		ifTrue:			[description := String new asValue]		ifFalse:			[description]</body>

<body package="CS474 EROS" selector="enableAllAspects">enableAllAspects(self builder componentAt:#sideDish) enable.(self builder componentAt:#ingredients) enable.(self builder componentAt:#description) enable.^self.</body>

<body package="CS474 EROS" selector="foodItemList">foodItemList	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^foodItemList isNil		ifTrue:			[foodItemList := SelectionInList new]		ifFalse:			[foodItemList]</body>

<body package="CS474 EROS" selector="suggestion">suggestion	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^suggestion isNil		ifTrue:			[suggestion := String new asValue]		ifFalse:			[suggestion]</body>

<body package="CS474 EROS" selector="ingredients">ingredients	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^ingredients isNil		ifTrue:			[ingredients := String new asValue]		ifFalse:			[ingredients]</body>

<body package="CS474 EROS" selector="disableAspectsMainDishes">disableAspectsMainDishes(self builder componentAt:#sideDish) enable.(self builder componentAt:#ingredients) enable.(self builder componentAt:#description) disable.^self</body>

<body package="CS474 EROS" selector="newSelection">newSelection	| t1 t2 space |	t1 := 1.	t2 := ''.	space := String with: Character space.	flag = 1		ifFalse: 			[myList makenil.			myList displayAll: foodItemList selection with: foodCategory value.			foodName value: myList foodName.			calories value: myList calories.			price value: myList price.			[t1 &lt;= myList ingredients size]				whileTrue: 					[t2 := t2 , space , (myList ingredients at: t1).					t1 := t1 + 1].			ingredients value: t2.			sideDish value: myList sidedish.			description value: myList descriptionIns.			suggestion value: myList suggestionn].	^self</body>

<body package="CS474 EROS" selector="foodCategoryChoice">foodCategoryChoice	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^foodCategoryChoice isNil		ifTrue:			[foodCategoryChoice := List new asValue]		ifFalse:			[foodCategoryChoice]</body>

<body package="CS474 EROS" selector="disableAspectsAppetizers">disableAspectsAppetizers(self builder componentAt:#sideDish) disable.(self builder componentAt:#ingredients) enable.(self builder componentAt:#description) disable.^self</body>

<body package="CS474 EROS" selector="price">price	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^price isNil		ifTrue:			[price := 0 asValue]		ifFalse:			[price]</body>

<body package="CS474 EROS" selector="disableAspectsLongDrink">disableAspectsLongDrink(self builder componentAt:#sideDish) disable.(self builder componentAt:#ingredients) enable.(self builder componentAt:#description) disable.^self</body>

<body package="CS474 EROS" selector="calories">calories	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^calories isNil		ifTrue:			[calories := 0 asValue]		ifFalse:			[calories]</body>

<body package="CS474 EROS" selector="disableAspectsSodaSelection">disableAspectsSodaSelection(self builder componentAt:#sideDish) disable.(self builder componentAt:#ingredients) disable.(self builder componentAt:#description) disable.^self</body>

<body package="CS474 EROS" selector="sideDish">sideDish	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^sideDish isNil		ifTrue:			[sideDish := String new asValue]		ifFalse:			[sideDish]</body>

<body package="CS474 EROS" selector="updateItemList">updateItemList	(foodCategory value='Appetizers')		ifTrue:[self enableAllAspects.			    self disableAspectsAppetizers].	(foodCategory value='MainDishes')		ifTrue:[self enableAllAspects.				self disableAspectsMainDishes].	(foodCategory value='Desserts')		ifTrue:[self enableAllAspects.				self disableAspectsDesserts].	(foodCategory value='SodaSelection')		ifTrue:[self enableAllAspects.				self disableAspectsSodaSelection].	(foodCategory value='LongDrink')		ifTrue:[self enableAllAspects.				self disableAspectsLongDrink].	myList i = 0		ifTrue: 			[foodItemList list: (myList displayItemList: foodCategory value).			self foodName value: ''.			self ingredients value: ''.			self price value: nil.			self calories value: nil.			self sideDish value: ''.			self description value: ''.			self suggestion value:''.].	^self</body>
</methods>

<methods>
<class-id>EROS</class-id> <category>actions</category>

<body package="CS474 EROS" selector="suggestFullMeal">suggestFullMeal	(calories value) isNil		ifTrue: 			[Dialog				warn: 'Enter the calories value to suggest a Full meal according to it'.			^self].	(price value) isNil		ifTrue: 			[Dialog				warn: 'Enter the Price value to suggest a Full meal according to it'.			^self].	myList suggestFullMeal: calories value with: price value.	self suggestion value: myList suggestionn.	^self</body>

<body package="CS474 EROS" selector="retrieveList">retrieveList	| fileName |	fileName := Dialog requestFileName: 'Enter file name'.	myList retrievelist:fileName.	self updateItemList.	Dialog warn:'File Import Successful'.	^self</body>

<body package="CS474 EROS" selector="createList">createList	myList initialize.	self updateItemList.	^self</body>

<body package="CS474 EROS" selector="Clear_Entries">Clear_Entries	myList makenil.	self updateItemList.	^self</body>

<body package="CS474 EROS" selector="removeItem">removeItem	myList removeItem: foodItemList selection with: foodCategory value.	self updateItemList.	^self</body>

<body package="CS474 EROS" selector="saveList">saveList	|  fileName|	fileName := Dialog requestFileName: 'Enter the file name you wish to save as'.	myList savelist:fileName.		^self</body>

<body package="CS474 EROS" selector="suggestLightMeal">suggestLightMeal	(calories value) isNil		ifTrue: 			[Dialog				warn: 'Enter the calories value to suggest a Light meal according to it'.			^self].	(price value) isNil		ifTrue: 			[Dialog				warn: 'Enter the Price value to suggest a Light meal according to it'.			^self].	myList suggestLightMeal: calories value with: price value.	self suggestion value: myList suggestionn.	^self</body>

<body package="CS474 EROS" selector="addItem">addItem	| ingredientsList t2 ingredients11 |	flag := 1.	ingredientsList := OrderedCollection new.	(ingredients11 := ingredients value readStream) = '' ifFalse: [[ingredients11 atEnd]			whileFalse: 				[t2 := ingredients11 upTo: Character space.				ingredientsList add: t2]].	(myList checkItemName: foodName value with: foodCategory value)		ifTrue: [myList				setItem: foodName value				with: foodCategory value				with: price value				with: calories value				with: ingredientsList				with: sideDish value				with: description value]		ifFalse: 			[Dialog warn: 'Duplicate FoodName'.			^self].	self updateItemList.	flag := 0.	^self</body>

<body package="CS474 EROS" selector="quit">quit	^self closeRequest.</body>
</methods>

<methods>
<class-id>EROS</class-id> <category>initialize-release</category>

<body package="CS474 EROS" selector="initialize">initialize| foodList |listNames:=OrderedCollection new.flag:=0.myList:= Food new.foodCategory:='Appetizers' asValue.foodList:=#('Appetizers' 'MainDishes' 'Desserts' 'SodaSelection' 'LongDrink') asList.foodCategoryChoice:= foodList asValue.self foodCategory onChangeSend:#updateItemList to:self.self foodItemList selectionIndexHolder onChangeSend: #newSelection to: self.^self.</body>
</methods>



</st-source>
